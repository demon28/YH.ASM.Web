

@{
    ViewBag.Title = "Index";
}

@section Pageheader{




    <h1>
        <small>  人员信息</small>

    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">People</li>
    </ol>

}


<section class="content">
    <div class="row">

        <!-- /.col -->
        <div id="tab_account">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">List</h3>

                    <div class="box-tools">

                        <div class="input-group input-group-sm  col-md-1 pull-right ml-1">
                            <button type="button" class="btn btn-default pull-right" @@click="ExportExcel()" id="btn_Search">导出Excel</button>
                        </div>


                        <div class="input-group input-group-sm  col-md-2 pull-right ml-1">
                            <input type="text" name="table_search" class="form-control pull-right" placeholder="Search" id="txt_Search" />

                            <div class="input-group-btn">
                                <button type="button" class="btn btn-default " @@click="Search()" id="btn_Search"><i class="fa fa-search"></i></button>
                            </div>

                        </div>



                    </div>
                </div>
                <!-- /.box-header -->
                <div class="box-body table-responsive no-padding">
                    <table class="table table-hover">
                        <tbody>
                            <tr>
                                <th>工号</th>
                                <th>姓名</th>
                                <th>密码</th>
                                <th>状态</th>
                                <th>数据来源</th>
                                <th>创建时间</th>
                                <th>操作</th>
                            </tr>
                            <tr v-for="(item,index) in list">
                                <td>{{item.WORK_ID}}</td>
                                <td>{{item.USER_NAME}}</td>
                                <td>********</td>


                                <td>
                                    <span class="label label-success" v-if="item.USER_STATUS==0">正常</span>
                                    <span class="label label-warning" v-if="item.USER_STATUS==1">冻结</span>
                                    <span class="label label-danger" v-if="item.USER_STATUS==2">关闭</span>
                                </td>

                                <td>{{item.DATA_SOURCE}}</td>
                                <td>{{item.CREATETIME}}</td>
                                <td>
                                    <button type="button" class="btn bg-purple  btn-xs" v-on:click="Details(item)">详情</button>
                                </td>
                            </tr>

                        </tbody>
                    </table>
                </div>
                <!-- /.box-body -->


                <div class="box-footer no-padding">
                    <div class="card-footer clearfix pull-left"  style="margin-left:20px;margin-top:30px;margin-bottom:30px">
                        Showing {{pIndex}} to {{pSize}} of {{pageTotal}}
                    </div>

                    <div class="card-footer clearfix pull-right " style="margin-right:30px;margin-top:30px;margin-bottom:30px" id="div_page">

                        <ul class="pagination pagination-sm no-margin pull-right" id="ul_page">
                        </ul>
                    </div>


                    <!-- /.pull-right -->
                </div>
            </div>
        </div>

    </div>
    <!-- /.col -->
    <!-- /.row -->




</section>


<script type="text/javascript">

    //当前页码
    var pageIndex = 1;
    //每页显示条数
    var pageSize = 10;
    //总共多少条
    var pageCount;
    //总共多少页
    var pageTotal;

    $(document).ready(function () {
        Load();
    });


    var vm;
    function Load() {

        vm = new Vue({
            el: "#tab_account",
            data: {
                list: [],
                pIndex: pageIndex,
                pSize: pageSize,
                pCount: pageCount,
                pTotal: pageTotal
            },
            created: function () {

                this.Init();

            },
            methods: {
                Init: function () {
                    var self = this;
                    var keywork = $("#txt_Search").val();
                    $.ajax({
                        url: "/People/GetList",
                        type: "POST",
                        data: {
                            keyword: keywork,
                            pageIndex: pageIndex,
                            pageSize: pageSize,
                        },
                        success: function (result) {

                            if (result.Success) {

                                self.list = result.Content;

                                pageIndex = result.PageIndex;
                                pageSize= result.PageSize;
                                pageCount = result.PageCount;
                                pageTotal = result.PageTotal;



                                self.PageBind();
                            }
                        }
                    })
                },
                Details: function (item) {
                    $.ajax({
                        url: "/People/Details",
                        type: "POST",
                        data: {
                            workid: item.work_id
                        },
                        success: function (result) {
                            if (result.Success) {
                                vm.Init();
                            }
                        }
                    });

                },
                Search: function () {

                    this.Init();
                },
                PageBind: function () {

                    $("#ul_page").jqPaginator({
                        totalPages: pageTotal,
                        visiblePages: pageSize,
                        currentPage: pageIndex,

                        first: ' <li><a href="#">First</a></li>',
                        prev: ' <li><a href="#">&laquo;</a></li>',
                        next: ' <li><a href="#">&raquo;</a></li>',
                        last: '<li><a href="#">Last<\/a><\/li>',
                        page: '<li><a href="javascript:void(0);">{{page}}<\/a><\/li>',

                        onPageChange: function (num, type) {

                            pageIndex = num;

                            if (type =="change") {
                                vm.Init();
                            }
                        }
                    });
                },
                ExportExcel: function () {
                    var keyword = $("#txt_Search").val();
                    window.location = "/People/ExportExcel?keyword=" + keyword;
                }
            }
        });
    }





</script>